#!/bin/bash

query_device() {
	for d in 0 1 2 3
	do
		dmem="$(nvidia-smi -q -i ${d} -d Memory |grep -A4 GPU | grep Used | grep -Eo '[0-9]{1,5}')"
		if (($dmem < 10)); then
		    device=${d}
		fi
	done
}

get_device() {
	unset device
	while [[ -z "${device}" ]]
	do
		query_device
		if [[ -z "${device}" ]]; then
			echo "All devices are busy, sleeping for 10s"
			sleep 10
		fi
	done
}

while getopts a: flag
do
    case "${flag}" in
        a) a=(${OPTARG//-/ });;
    esac
done

# regular
for ((exp_num = ${a[0]}; exp_num <= ${a[1]}; exp_num++ )); do
	get_device
	CUDA_VISIBLE_DEVICES=$((device)) nohup bash -c "python sharp_dl_prob.py \
		--exp_num=${exp_num} \
		--dtype='cifar10'" > jobs/${exp_num}.out 2>&1 &
	# sleep 3
	# python train.py \
	# 	--ep=500 \
	# 	--dtype='cifar10' \
	# 	--print_freq=500 \
	# 	--exp_num=${exp_num} && \
done


# label noise
# for ln in $(seq ${a[0]} 1 ${a[1]}); do
# # 	get_device
# # 	# CUDA_VISIBLE_DEVICES=$((device)) nohup bash -c "python train_label_noise.py \
# # 	# 	--dtype='cifar10' \
# # 	# 	--ep=350 \
# # 	# 	--ms=0 \
# # 	# 	--mo=0.9 \
# # 	# 	--wd=5e-4 \
# # 	# 	--lr=0.1 \
# # 	# 	--bs=128 \
# # 	# 	--ln=${ln} \
# # 	# 	--print_freq=50" > jobs/${ln}.out 2>&1 &
# 	CUDA_VISIBLE_DEVICES=$((device)) nohup bash -c "python sharp_label_noise.py \
# 		--dtype='cifar10' \
# 		--ms=0 \
# 		--bs=512 \
# 		--ln=${ln}" > jobs/${ln}.out 2>&1 &
# 	sleep 10
# done


# double descent
# for width in $(seq ${a[0]} 2 ${a[1]}); do
# 	get_device
# 	# CUDA_VISIBLE_DEVICES=$((device)) nohup bash -c "python \
# 	# sharp_dd.py --dtype='cifar10' \
# 	# --ms=0 --bs=1024 --width=${width}" > jobs/${width}.out 2>&1 &
# 	python train_double_descent.py \
# 		--dtype='cifar10' \
# 		--ep=500 \
# 		--ms=0 \
# 		--mo=0.0 \
# 		--wd=0.0 \
# 		--lr=0.0001 \
# 		--bs=128 \
# 		--width=${width} \
# 		--print_freq=50 > jobs/${width}.out 2>&1 &
# 	sleep 2
# done


# CUDA_VISIBLE_DEVICES=0 python train_double_descent.py \
# 		--dtype='cifar10' \
# 		--ep=4000 \
# 		--ms=0 \
# 		--mo=0.0 \
# 		--wd=0.0 \
# 		--lr=0.0001 \
# 		--bs=128 \
# 		--width=1 \
# 		--print_freq=50
